CafeScript CheatSheet
=====================

This is a set of examples of various snippets of CafeScript(C) code, and
equivalents in CoffeeScript(S), Ruby(R), Perl6(6), Perl5(5), JavaScript(J) and
Python(P).

CafeScript is in a /very/ early stage. See this example and Perl5 equivalent:

* https://github.com/ingydotnet/pegex-pm/blob/cafe/lib/Pegex/Parser.cafe
* https://github.com/ingydotnet/pegex-pm/blob/cafe/lib/Pegex/Parser.pm

CafeScript is most influenced by CoffeeScript, Ruby and Perl 6. The examples
here show the major departures.

== Global regex string replacement in place

Replace all the regex matches in a string variable with a string value.

  C: foo .= gsub /a*/, 'b'
  S: foo = foo.replace /a*/, 'b'
  R: foo.gsub! /a*/, 'b'
  5: $foo =~ s/a*/b/g;
  6: $foo.subst(/a*/, 'b', :g);
  J: foo = foo.replace(/a*/, 'b');
  P: re.sub(r'a*', 'b', foo)

== Set an attribute of the current object

  C: @foo = 42
  S: @foo = 42
  R: @foo = 42
  5: $self->{foo} = 42;
  6: $.foo = 42;
  J: this.foo = 42;
  P: self.foo = 42

== Method definition

  C: min = \(x, y)
       x < y ? x : y
  S: min = (x, y)->
       if x < y then x else y
  R: def min(x, y)
       x < y ? x : y
     end
  5: sub min {
       my ($self, $x, $y) = @_;
       $x < $y ? $x : $y;
     }
  6: method min($x, $y) {
       $x < $y ?? $x !! $y;
     }
  J: function min(x, y) {
       return x < y ? x : y;
     }
  P: def min(x, y):
       if x < y:
         return x
       else:
         return y

== Method call
  C: @.min(3, 4)  # Also:
     min(3, 4)
     min(3 4)
     min 3, 4
  S: @min 3, 4
  R: min 3, 4
  5: $self->min(3, 4);
  6: $.min(3, 4);
  J: this.min(3, 4);
  P: self.min(3, 4)

== Element Access

  C: hash:key               # Key is 'key' string
     hash:(key)             # Key is in a variable
     hash:<k1 k2>           # Hash slice 'k1', 'k2'
     hash:k1,k2             # Hash slice k1, k2 vars
     array:3                # Array access
     array:4:2              # 2 elems starting at 4
     array:4-6              # Same
     array:4-:              # 4 to end
     array:2,4,6-8          # Set of elements
     array:-5:              # Last 5 chars
     string:3               # String is like array of characters
